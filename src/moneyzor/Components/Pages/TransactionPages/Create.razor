@page "/transactions/create"
@using Microsoft.EntityFrameworkCore
@using moneyzor.Entities
@inject IDbContextFactory<moneyzor.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h2>Transaction</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Transaction" OnValidSubmit="AddTransaction" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label>
                <InputText id="description" @bind-Value="Transaction.Description" class="form-control" />
                <ValidationMessage For="() => Transaction.Description" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="amount" class="form-label">Amount:</label>
                <InputNumber id="amount" @bind-Value="Transaction.Amount" class="form-control" />
                <ValidationMessage For="() => Transaction.Amount" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="category" class="form-label">Category:</label>
                <InputSelect id="category" @bind-Value="Transaction.Category" class="form-control">
                    @foreach (var category in TransactionCategories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => Transaction.CategoryId" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="type" class="form-label">Type:</label>
                <InputSelect id="type" @bind-Value="Transaction.Type" class="form-control">
                    @foreach (var type in Enum.GetValues<TransactionType>())
                    {
                        <option value="@type">@type</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => Transaction.Type" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/transactions">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Transaction Transaction { get; set; } = new();
    private List<TransactionCategory> TransactionCategories { get; set; } = new();

    private async Task AddTransaction()
    {
        using var context = DbFactory.CreateDbContext();
        context.Transaction.Add(Transaction);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/transactions");
    }

    override protected void OnInitialized()
    {
        using var context = DbFactory.CreateDbContext();
        TransactionCategories = context.TransactionCategory.ToList();
    }

}
